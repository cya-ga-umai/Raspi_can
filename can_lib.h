// =============================================================================
// ファイル名 : can_lib.h
// 機能    : CAN通信の送受信機能
// =============================================================================
#ifndef CAN_LIB_H_INCLUDED
#define CAN_LIB_H_INCLUDED

#include <stdio.h>
#include <linux/can.h>

// =============================================================================
// 関数名 : can_init
// 機能  : 初期処理
// 引数  : なし
// 戻り値 : ソケット
// =============================================================================
int can_init(void);

// =============================================================================
// 関数名 : can_send
// 機能  : データの送信処理
// 引数  : 第1引数 ソケット、第2引数 送信先id、第3引数 データサイズ、第4引数 データバイト
// 戻り値 : なし
// =============================================================================
void can_send(int sock, canid_t id, unsigned char dlc, unsigned char *data);

// =============================================================================
// 関数名 : can_read
// 機能  : データ受信処理
// 引数  : ソケット
// 戻り値 : can_frame構造体
// =============================================================================
struct can_frame can_read(int sock);

// =============================================================================
// 関数名 : set_can_filter
// 機能  : 受信フィルタ設定関数
// 引数  : 第1引数 受信対象id、第2引数 受信idマスク値
// 戻り値 : can_filter構造体
// =============================================================================
struct can_filter set_can_filter(canid_t id, canid_t mask);

// =============================================================================
// 関数名 : itob ltob
// 機能  : バイト列変換関数
// 引数  : 第1引数 int型、long型データ、第2引数 変換先char型配列へのポインタ
// 戻り値 : なし
// =============================================================================
void itob(int src, char *byte);

void ltob(long src, char *byte);

// =============================================================================
// 関数名 : btoi btol
// 機能  : int型、long型データ変換関数
// 引数  : 第1引数 変換元char型配列へのポインタ、第2引数 データサイズ
// 戻り値 : 変換先int型、long型データ
// =============================================================================
int btoi(char *src, size_t size);

long btol(char *src, size_t size);

#endif
